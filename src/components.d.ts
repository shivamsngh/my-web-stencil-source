/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import '@stencil/state-tunnel';

import {
  About,
} from './global/About';
import {
  MatchResults,
} from '@stencil/router';
import {
  ContactDetails,
} from './global/ContactDetails';
import {
  Portfolio,
} from './global/Portfolio';
import {
  Books,
} from './global/Books';
import {
  Photo,
} from './global/BucketList';
import {
  CardEvent,
} from './global/CardEvent';

declare global {

  namespace StencilComponents {
    interface MyWebAbout {
      'aboutYou': About;
    }
  }

  interface HTMLMyWebAboutElement extends StencilComponents.MyWebAbout, HTMLStencilElement {}

  var HTMLMyWebAboutElement: {
    prototype: HTMLMyWebAboutElement;
    new (): HTMLMyWebAboutElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-about': HTMLMyWebAboutElement;
  }
  interface ElementTagNameMap {
    'my-web-about': HTMLMyWebAboutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-about': JSXElements.MyWebAboutAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebAboutAttributes extends HTMLAttributes {
      'aboutYou'?: About;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebBucketlist {
      'match': MatchResults;
    }
  }

  interface HTMLMyWebBucketlistElement extends StencilComponents.MyWebBucketlist, HTMLStencilElement {}

  var HTMLMyWebBucketlistElement: {
    prototype: HTMLMyWebBucketlistElement;
    new (): HTMLMyWebBucketlistElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-bucketlist': HTMLMyWebBucketlistElement;
  }
  interface ElementTagNameMap {
    'my-web-bucketlist': HTMLMyWebBucketlistElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-bucketlist': JSXElements.MyWebBucketlistAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebBucketlistAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebContact {
      'contact': ContactDetails;
    }
  }

  interface HTMLMyWebContactElement extends StencilComponents.MyWebContact, HTMLStencilElement {}

  var HTMLMyWebContactElement: {
    prototype: HTMLMyWebContactElement;
    new (): HTMLMyWebContactElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-contact': HTMLMyWebContactElement;
  }
  interface ElementTagNameMap {
    'my-web-contact': HTMLMyWebContactElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-contact': JSXElements.MyWebContactAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebContactAttributes extends HTMLAttributes {
      'contact'?: ContactDetails;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebEvent {

    }
  }

  interface HTMLMyWebEventElement extends StencilComponents.MyWebEvent, HTMLStencilElement {}

  var HTMLMyWebEventElement: {
    prototype: HTMLMyWebEventElement;
    new (): HTMLMyWebEventElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-event': HTMLMyWebEventElement;
  }
  interface ElementTagNameMap {
    'my-web-event': HTMLMyWebEventElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-event': JSXElements.MyWebEventAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebEventAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebHome {

    }
  }

  interface HTMLMyWebHomeElement extends StencilComponents.MyWebHome, HTMLStencilElement {}

  var HTMLMyWebHomeElement: {
    prototype: HTMLMyWebHomeElement;
    new (): HTMLMyWebHomeElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-home': HTMLMyWebHomeElement;
  }
  interface ElementTagNameMap {
    'my-web-home': HTMLMyWebHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-home': JSXElements.MyWebHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebMore {

    }
  }

  interface HTMLMyWebMoreElement extends StencilComponents.MyWebMore, HTMLStencilElement {}

  var HTMLMyWebMoreElement: {
    prototype: HTMLMyWebMoreElement;
    new (): HTMLMyWebMoreElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-more': HTMLMyWebMoreElement;
  }
  interface ElementTagNameMap {
    'my-web-more': HTMLMyWebMoreElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-more': JSXElements.MyWebMoreAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebMoreAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebPortfolio {
      'portfolio': Portfolio[];
    }
  }

  interface HTMLMyWebPortfolioElement extends StencilComponents.MyWebPortfolio, HTMLStencilElement {}

  var HTMLMyWebPortfolioElement: {
    prototype: HTMLMyWebPortfolioElement;
    new (): HTMLMyWebPortfolioElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-portfolio': HTMLMyWebPortfolioElement;
  }
  interface ElementTagNameMap {
    'my-web-portfolio': HTMLMyWebPortfolioElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-portfolio': JSXElements.MyWebPortfolioAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebPortfolioAttributes extends HTMLAttributes {
      'portfolio'?: Portfolio[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebSocial {

    }
  }

  interface HTMLMyWebSocialElement extends StencilComponents.MyWebSocial, HTMLStencilElement {}

  var HTMLMyWebSocialElement: {
    prototype: HTMLMyWebSocialElement;
    new (): HTMLMyWebSocialElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-social': HTMLMyWebSocialElement;
  }
  interface ElementTagNameMap {
    'my-web-social': HTMLMyWebSocialElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-social': JSXElements.MyWebSocialAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebSocialAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebBlog {
      'blogApiKey': string;
      'blogUrl': string;
    }
  }

  interface HTMLMyWebBlogElement extends StencilComponents.MyWebBlog, HTMLStencilElement {}

  var HTMLMyWebBlogElement: {
    prototype: HTMLMyWebBlogElement;
    new (): HTMLMyWebBlogElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-blog': HTMLMyWebBlogElement;
  }
  interface ElementTagNameMap {
    'my-web-blog': HTMLMyWebBlogElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-blog': JSXElements.MyWebBlogAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebBlogAttributes extends HTMLAttributes {
      'blogApiKey'?: string;
      'blogUrl'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebBookLibrary {
      'books': Books[];
      'card': any;
      'currentBook': Books;
    }
  }

  interface HTMLMyWebBookLibraryElement extends StencilComponents.MyWebBookLibrary, HTMLStencilElement {}

  var HTMLMyWebBookLibraryElement: {
    prototype: HTMLMyWebBookLibraryElement;
    new (): HTMLMyWebBookLibraryElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-book-library': HTMLMyWebBookLibraryElement;
  }
  interface ElementTagNameMap {
    'my-web-book-library': HTMLMyWebBookLibraryElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-book-library': JSXElements.MyWebBookLibraryAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebBookLibraryAttributes extends HTMLAttributes {
      'books'?: Books[];
      'card'?: any;
      'currentBook'?: Books;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebHeader {
      'backgroundColor': string;
      'backgroundImage': string;
      'textColor': string;
      'type': string;
      'videoData': any;
    }
  }

  interface HTMLMyWebHeaderElement extends StencilComponents.MyWebHeader, HTMLStencilElement {}

  var HTMLMyWebHeaderElement: {
    prototype: HTMLMyWebHeaderElement;
    new (): HTMLMyWebHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-header': HTMLMyWebHeaderElement;
  }
  interface ElementTagNameMap {
    'my-web-header': HTMLMyWebHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-header': JSXElements.MyWebHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebHeaderAttributes extends HTMLAttributes {
      'backgroundColor'?: string;
      'backgroundImage'?: string;
      'textColor'?: string;
      'type'?: string;
      'videoData'?: any;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebNav {
      'backgroundColor': string;
      'textColor': string;
    }
  }

  interface HTMLMyWebNavElement extends StencilComponents.MyWebNav, HTMLStencilElement {}

  var HTMLMyWebNavElement: {
    prototype: HTMLMyWebNavElement;
    new (): HTMLMyWebNavElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-nav': HTMLMyWebNavElement;
  }
  interface ElementTagNameMap {
    'my-web-nav': HTMLMyWebNavElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-nav': JSXElements.MyWebNavAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebNavAttributes extends HTMLAttributes {
      'backgroundColor'?: string;
      'textColor'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebPhotoGallery {
      'photos': Photo[];
    }
  }

  interface HTMLMyWebPhotoGalleryElement extends StencilComponents.MyWebPhotoGallery, HTMLStencilElement {}

  var HTMLMyWebPhotoGalleryElement: {
    prototype: HTMLMyWebPhotoGalleryElement;
    new (): HTMLMyWebPhotoGalleryElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-photo-gallery': HTMLMyWebPhotoGalleryElement;
  }
  interface ElementTagNameMap {
    'my-web-photo-gallery': HTMLMyWebPhotoGalleryElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-photo-gallery': JSXElements.MyWebPhotoGalleryAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebPhotoGalleryAttributes extends HTMLAttributes {
      'photos'?: Photo[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRecentEventCard {
      'cardEvent': CardEvent;
    }
  }

  interface HTMLAppRecentEventCardElement extends StencilComponents.AppRecentEventCard, HTMLStencilElement {}

  var HTMLAppRecentEventCardElement: {
    prototype: HTMLAppRecentEventCardElement;
    new (): HTMLAppRecentEventCardElement;
  };
  interface HTMLElementTagNameMap {
    'app-recent-event-card': HTMLAppRecentEventCardElement;
  }
  interface ElementTagNameMap {
    'app-recent-event-card': HTMLAppRecentEventCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-recent-event-card': JSXElements.AppRecentEventCardAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRecentEventCardAttributes extends HTMLAttributes {
      'cardEvent'?: CardEvent;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyWebTwitter {

    }
  }

  interface HTMLMyWebTwitterElement extends StencilComponents.MyWebTwitter, HTMLStencilElement {}

  var HTMLMyWebTwitterElement: {
    prototype: HTMLMyWebTwitterElement;
    new (): HTMLMyWebTwitterElement;
  };
  interface HTMLElementTagNameMap {
    'my-web-twitter': HTMLMyWebTwitterElement;
  }
  interface ElementTagNameMap {
    'my-web-twitter': HTMLMyWebTwitterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-web-twitter': JSXElements.MyWebTwitterAttributes;
    }
  }
  namespace JSXElements {
    export interface MyWebTwitterAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
